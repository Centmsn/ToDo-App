{"version":3,"sources":["actions/index.js","components/Menu.js","helpers/consts.js","helpers/index.js","components/NoteEdit.js","components/Note.js","components/NotesContainer.js","components/NoteCreate.js","components/RemovedNotes.js","components/Settings.js","components/TopBar.js","components/App.js","reducers/doneNotesReducer.js","reducers/editNoteVisibilityReducer.js","reducers/notesReducer.js","reducers/noteIdReducer.js","reducers/removedNotesReducer.js","reducers/settingsReducer.js","reducers/index.js","reducers/createNoteVisibilityReducer.js","reducers/settingsVisibilityReducer.js","index.js"],"names":["hideCreateNote","type","hideSettings","hideEdit","connect","state","createNoteVisiblity","notesMenu","settingsVisibility","settings","darkmode","settingsList","showCreateNote","showSettings","iconStyle","transform","hideWindows","style","backgroundColor","className","to","onClick","exact","icon","faHome","faCogs","setTimeout","faPlus","faTrashAlt","renderFormInput","field","label","input","autoComplete","meta","touched","error","renderFormTextarea","handleVisibility","visibility","closeForm","e","form","clb","formWidth","current","clientWidth","clientX","window","innerWidth","WrappedNoteEdit","reduxForm","enableReinitialize","validate","values","errors","title","desc","isVisible","editNote","handleSubmit","id","notes","formContainer","useRef","ref","onSubmit","console","log","params","localStorage","clear","forEach","note","setItem","JSON","stringify","reset","Field","component","name","value","initialValues","preventDefault","editList","notesList","payload","fontSize","deleteNote","index","moveToDone","moveToRemoved","showEdit","props","noteRef","displayFont","color","handleNoteDelete","dataset","key","description","data-key","date","faPen","faCheck","faTimes","containerStyle","map","WrappedNoteCreate","history","useHistory","incrementId","createNote","push","Date","toLocaleString","removed","removedNotes","done","doneNotes","font","renderNotes","list","styleText","styleContainer","styleTitle","WrappedSettings","switchDarkMode","switchFontSize","darkMode","size","useState","currentTime","setCurrentTime","useEffect","setInterval","hours","getHours","minutes","getMinutes","seconds","getSeconds","toLocaleDateString","App","path","RemovedNotes","NotesContainer","NoteCreate","Settings","NoteEdit","INITIAL_STATE","length","initalValue","keys","Object","i","parse","setInitialValue","convertedKeys","parseInt","Math","max","getInitialValue","combineReducers","action","removeItem","filter","el","FormReducer","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da7db3a6.chunk.js","sourcesContent":["export const CREATE = \"CREATE\";\r\nexport const DELETE = \"DELETE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const HIDE_EDIT = \"HIDE_EDIT\";\r\nexport const HIDE_NOTES = \"HIDE_NOTES\";\r\nexport const HIDE_SETTINGS = \"HIDE_SETTINGS\";\r\nexport const INCREMENT = \"INCREMENT\";\r\nexport const MOVE_TO_DONE = \"MOVE_TO_DONE\";\r\nexport const MOVE_TO_REMOVED = \"MOVE_TO_REMOVED\";\r\nexport const SHOW_NOTES = \"SHOW_NOTES\";\r\nexport const SHOW_SETTINGS = \"SHOW_SETTINGS\";\r\nexport const SHOW_EDIT = \"SHOW_EDIT\";\r\nexport const SWITCH_MODE = \"SWITCH_MODE\";\r\nexport const SWITCH_SIZE = \"SWITCH_SIZE\";\r\n\r\nexport const showCreateNote = () => {\r\n  return {\r\n    type: SHOW_NOTES,\r\n  };\r\n};\r\n\r\nexport const hideCreateNote = () => {\r\n  return {\r\n    type: HIDE_NOTES,\r\n  };\r\n};\r\n\r\nexport const showSettings = () => {\r\n  return {\r\n    type: SHOW_SETTINGS,\r\n  };\r\n};\r\n\r\nexport const hideSettings = () => {\r\n  return {\r\n    type: HIDE_SETTINGS,\r\n  };\r\n};\r\n\r\nexport const showEdit = (id, title, desc) => {\r\n  return {\r\n    type: SHOW_EDIT,\r\n    payload: {\r\n      id,\r\n      title,\r\n      desc,\r\n    },\r\n  };\r\n};\r\n\r\nexport const hideEdit = () => {\r\n  return {\r\n    type: HIDE_EDIT,\r\n  };\r\n};\r\n\r\nexport const switchDarkMode = (value) => {\r\n  return {\r\n    type: SWITCH_MODE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const switchFontSize = (size) => {\r\n  return {\r\n    type: SWITCH_SIZE,\r\n    payload: size,\r\n  };\r\n};\r\n\r\nexport const createNote = (values) => {\r\n  return {\r\n    type: CREATE,\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.description,\r\n      color: values.color,\r\n      id: values.id,\r\n      date: new Date().toLocaleString(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteNote = (index) => {\r\n  return {\r\n    type: DELETE,\r\n    payload: index,\r\n  };\r\n};\r\n\r\nexport const editNote = (values) => {\r\n  return {\r\n    type: EDIT,\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.desc,\r\n      id: values.id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const incrementId = () => {\r\n  return {\r\n    type: INCREMENT,\r\n  };\r\n};\r\n\r\nexport const moveToRemoved = (values) => {\r\n  return {\r\n    type: MOVE_TO_REMOVED,\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.desc,\r\n    },\r\n  };\r\n};\r\n\r\nexport const moveToDone = (values) => {\r\n  return {\r\n    type: MOVE_TO_DONE,\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.desc,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n  hideEdit,\r\n} from \"../actions\";\r\nimport { darkModeBgMenu } from \"../helpers/consts\";\r\n\r\nimport \"../css/menu.css\";\r\n\r\nconst Menu = ({\r\n  createNoteVisiblity,\r\n  settingsVisibility,\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n  hideEdit,\r\n  darkmode,\r\n}) => {\r\n  const iconStyle =\r\n    createNoteVisiblity === \"SHOW\" ? { transform: \"rotate(45deg)\" } : null;\r\n\r\n  const handleCreateNoteVisiblity = () => {\r\n    if (createNoteVisiblity === \"HIDE\") {\r\n      showCreateNote();\r\n      hideSettings();\r\n      hideEdit();\r\n    } else {\r\n      hideCreateNote();\r\n      setTimeout(() => {}, 500);\r\n    }\r\n  };\r\n\r\n  const handleSettingsVisiblity = () => {\r\n    if (settingsVisibility === \"HIDE\") {\r\n      showSettings();\r\n      hideCreateNote();\r\n      hideEdit();\r\n    } else {\r\n      hideSettings();\r\n    }\r\n  };\r\n\r\n  const hideWindows = () => {\r\n    hideSettings();\r\n    hideCreateNote();\r\n    hideEdit();\r\n  };\r\n\r\n  const style = darkmode ? { backgroundColor: darkModeBgMenu } : null;\r\n\r\n  return (\r\n    <div className=\"menu\" style={style}>\r\n      <div className=\"menu__button--left\">\r\n        <NavLink to=\"/\" className=\"menu__link\" onClick={hideWindows} exact>\r\n          <FontAwesomeIcon icon={faHome} />\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <button className=\"menu__link\" onClick={handleSettingsVisiblity}>\r\n          <FontAwesomeIcon icon={faCogs} />\r\n        </button>\r\n      </div>\r\n      <div className=\"menu__button--center\" style={style}>\r\n        <button\r\n          className=\"menu__link menu__link--large\"\r\n          onClick={handleCreateNoteVisiblity}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faPlus}\r\n            style={iconStyle}\r\n            className=\"menu__icon\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/deleted\" className=\"menu__link\" onClick={hideWindows}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    createNoteVisiblity: state.notesMenu,\r\n    settingsVisibility: state.settings,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n  hideEdit,\r\n})(Menu);\r\n","export const darkModeBg = \"rgb(61, 99, 115)\";\r\nexport const darkModeBgMenu = \"rgb(31, 54, 64)\";\r\n","import React from \"react\";\r\n\r\nexport const renderFormInput = (field) => {\r\n  return (\r\n    <>\r\n      <label className={`${field.className}__form-label`}>\r\n        {field.label}\r\n        <input\r\n          type={field.type}\r\n          {...field.input}\r\n          className={`${field.className}__form-input`}\r\n          autoComplete=\"off\"\r\n        />\r\n      </label>\r\n      {field.meta.touched ? (\r\n        <p className={`${field.className}__error`}>{field.meta.error}</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const renderFormTextarea = (field) => {\r\n  return (\r\n    <>\r\n      <label className={`${field.className}__form-label`}>\r\n        {field.label}\r\n        <textarea\r\n          {...field.input}\r\n          className={`${field.className}__form-input ${field.className}__form-input--large`}\r\n        />\r\n      </label>\r\n      {field.meta.touched ? (\r\n        <p className={`${field.className}__error`}>{field.meta.error}</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const handleVisibility = (visibility) => {\r\n  if (visibility === \"HIDE\") {\r\n    return { transform: \"translateY(100vh)\", visibility: \"hidden\" };\r\n  } else {\r\n    return { transform: \"translateY(0)\" };\r\n  }\r\n};\r\n\r\nexport const closeForm = (e, form, clb) => {\r\n  const formWidth = form.current.clientWidth;\r\n  if (\r\n    e.clientX < (window.innerWidth - formWidth) / 2 ||\r\n    e.clientX > (window.innerWidth - formWidth) / 2 + formWidth\r\n  ) {\r\n    clb();\r\n  }\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\n\r\nimport { editNote, hideEdit } from \"../actions\";\r\nimport { darkModeBg } from \"../helpers/consts\";\r\nimport {\r\n  renderFormInput,\r\n  handleVisibility,\r\n  renderFormTextarea,\r\n  closeForm,\r\n} from \"../helpers\";\r\n\r\nimport \"../css/noteedit.css\";\r\n\r\nconst NoteEdit = ({\r\n  isVisible,\r\n  editNote,\r\n  handleSubmit,\r\n  hideEdit,\r\n  id,\r\n  title,\r\n  notes,\r\n  darkmode,\r\n}) => {\r\n  const formContainer = useRef();\r\n\r\n  const setVisibility = () => {\r\n    return handleVisibility(isVisible);\r\n  };\r\n\r\n  const oNSubmit = (values) => {\r\n    console.log(id);\r\n    const params = { desc: values.desc, title: values.title, id };\r\n\r\n    editNote(params);\r\n    localStorage.clear();\r\n\r\n    notes.forEach((note) => {\r\n      localStorage.setItem(note.id, JSON.stringify(note));\r\n    });\r\n\r\n    reset();\r\n    hideEdit();\r\n  };\r\n\r\n  const onReject = (e) => {\r\n    e.preventDefault();\r\n    hideEdit();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"note-edit\"\r\n      style={setVisibility()}\r\n      onClick={(e) => closeForm(e, formContainer, hideEdit)}\r\n    >\r\n      <div\r\n        className=\"note-edit__form\"\r\n        ref={formContainer}\r\n        style={darkmode ? { backgroundColor: darkModeBg } : null}\r\n      >\r\n        <form onSubmit={handleSubmit(oNSubmit)}>\r\n          <Field\r\n            component={renderFormInput}\r\n            label=\"title\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value=\"title\"\r\n            initialValues={title}\r\n            className=\"note-edit\"\r\n          />\r\n          <Field\r\n            component={renderFormTextarea}\r\n            label=\"description\"\r\n            type=\"text\"\r\n            name=\"desc\"\r\n            value=\"desc\"\r\n            className=\"note-edit\"\r\n          />\r\n          <button className=\"button\">Save changes</button>\r\n          <button className=\"button button--red\" onClick={onReject}>\r\n            Discard changes\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.title) {\r\n    errors.title = \"Enter note title\";\r\n  }\r\n\r\n  if (!values.desc) {\r\n    errors.desc = \"Enter note description\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.editList.visibility,\r\n    notes: state.notesList,\r\n    id: state.editList.id,\r\n    initialValues: { title: state.editList.title, desc: state.editList.desc },\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nconst WrappedNoteEdit = reduxForm({\r\n  form: \"noteEdit\",\r\n  enableReinitialize: true,\r\n  validate,\r\n})(NoteEdit);\r\n\r\nexport default connect(mapStateToProps, { editNote, hideEdit })(\r\n  WrappedNoteEdit\r\n);\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteNote, moveToDone, moveToRemoved, showEdit } from \"../actions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../css/note.css\";\r\n\r\nconst Note = (props) => {\r\n  const noteRef = useRef();\r\n\r\n  const displayFont = () => {\r\n    switch (props.fontSize) {\r\n      case \"small\":\r\n        return \"9px\";\r\n\r\n      case \"normal\":\r\n        return \"15px\";\r\n\r\n      case \"large\":\r\n        return \"22px\";\r\n      default:\r\n        return \"15px\";\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    backgroundColor: props.color,\r\n    color: props.color === \"rgb(209, 63, 63)\" ? \"white\" : \"black\",\r\n    fontSize: displayFont(),\r\n  };\r\n\r\n  const handleNoteDelete = (type) => {\r\n    props.deleteNote(noteRef.current.dataset.key);\r\n    const values = { title: props.title, desc: props.description };\r\n\r\n    if (type === \"DONE\") {\r\n      props.moveToDone(values);\r\n    } else {\r\n      props.moveToRemoved(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note\" data-key={props.id} ref={noteRef} style={style}>\r\n      <div className=\"note__top-bar\">\r\n        <div className=\"note__date\">{`Created: ${props.date}`}</div>\r\n\r\n        <div className=\"note__edit\">\r\n          <FontAwesomeIcon\r\n            icon={faPen}\r\n            className=\"note__icon\"\r\n            onClick={() =>\r\n              props.showEdit(props.id, props.title, props.description)\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"note__done\">\r\n          <FontAwesomeIcon\r\n            icon={faCheck}\r\n            className=\"note__icon\"\r\n            onClick={() => handleNoteDelete(\"DONE\")}\r\n          />\r\n        </div>\r\n        <div className=\"note__delete\">\r\n          <FontAwesomeIcon\r\n            icon={faTimes}\r\n            className=\"note__icon\"\r\n            onClick={() => handleNoteDelete(\"REMOVED\")}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"note__body\">\r\n        <div className=\"note__title\" style={{ fontSize: displayFont() }}>\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <div className=\"note__text\">\r\n          <p>{props.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fontSize: state.settingsList.fontSize,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteNote,\r\n  moveToDone,\r\n  moveToRemoved,\r\n  showEdit,\r\n})(Note);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Note from \"./Note\";\r\n\r\nimport \"../css/notescontainer.css\";\r\n\r\nconst NotesContainer = ({ notesList, darkmode }) => {\r\n  const containerStyle = darkmode ? { backgroundColor: \"black\" } : null;\r\n\r\n  const renderNotes = () =>\r\n    notesList.map((note) => (\r\n      <Note\r\n        title={note.title}\r\n        description={note.desc}\r\n        id={note.id}\r\n        color={note.color}\r\n        date={note.date}\r\n        key={note.id}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"notes-container\" style={containerStyle}>\r\n      {renderNotes()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notesList: state.notesList,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(NotesContainer);\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { createNote, hideCreateNote, incrementId } from \"../actions\";\r\nimport { darkModeBg } from \"../helpers/consts\";\r\nimport {\r\n  renderFormInput,\r\n  handleVisibility,\r\n  renderFormTextarea,\r\n  closeForm,\r\n} from \"../helpers\";\r\n\r\nimport \"../css/notecreate.css\";\r\n\r\nconst NoteCreate = (props) => {\r\n  const history = useHistory();\r\n  const formContainer = useRef();\r\n  const handleSubmit = (values) => {\r\n    const { incrementId, reset, createNote, hideCreateNote, id } = props;\r\n\r\n    const params = { ...values, id: id };\r\n    incrementId();\r\n\r\n    createNote(params);\r\n    reset();\r\n    hideCreateNote();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const setVisbility = () => {\r\n    return handleVisibility(props.isVisible);\r\n  };\r\n\r\n  const style = props.darkmode ? { backgroundColor: darkModeBg } : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"note-create\"\r\n      style={setVisbility()}\r\n      onClick={(e) => closeForm(e, formContainer, props.hideCreateNote)}\r\n    >\r\n      <div\r\n        className=\"note-create__form-container\"\r\n        style={style}\r\n        ref={formContainer}\r\n      >\r\n        <form onSubmit={props.handleSubmit(handleSubmit)}>\r\n          <p className=\"note-create__title\">Select note color</p>\r\n          <div className=\"note-create__form-field note-create__form-field--flex\">\r\n            <Field\r\n              name=\"color\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              label=\"Red\"\r\n              value=\"rgb(209, 63, 63)\"\r\n              className=\"note-create\"\r\n            />\r\n            <Field\r\n              name=\"color\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              label=\"Green\"\r\n              value=\"rgb(99, 170, 84)\"\r\n              className=\"note-create\"\r\n            />\r\n            <Field\r\n              name=\"color\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              label=\"Yellow\"\r\n              value=\"rgb(252, 219, 111)\"\r\n              className=\"note-create\"\r\n            />\r\n          </div>\r\n          <div className=\"note-create__form-field\">\r\n            <Field\r\n              name=\"title\"\r\n              component={renderFormInput}\r\n              type=\"text\"\r\n              label=\"Note title\"\r\n              className=\"note-create\"\r\n            />\r\n          </div>\r\n          <div className=\"note-create__form-field\">\r\n            <Field\r\n              name=\"description\"\r\n              component={renderFormTextarea}\r\n              label=\"Note description\"\r\n              className=\"note-create\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"button\">\r\n            Create note\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.notesMenu,\r\n    id: state.id,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.title) {\r\n    errors.title = \"Enter note title\";\r\n  }\r\n\r\n  if (!values.description) {\r\n    errors.description = \"Enter note description\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst WrappedNoteCreate = reduxForm({\r\n  form: \"noteCreate\",\r\n  validate,\r\n})(NoteCreate);\r\n\r\nexport default connect(mapStateToProps, {\r\n  createNote,\r\n  hideCreateNote,\r\n  incrementId,\r\n})(WrappedNoteCreate);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../css/removednotes.css\";\r\n\r\nconst RemovedNotes = ({ removed, done, darkmode, font }) => {\r\n  const renderNotes = (list) =>\r\n    list.map((note) => (\r\n      <li className=\"list__item\" key={note.title}>\r\n        <h4 className=\"list__title\" style={{ fontSize: styleText() }}>\r\n          {note.title}\r\n        </h4>\r\n        <p style={{ fontSize: styleText() }}>{note.desc}</p>\r\n      </li>\r\n    ));\r\n\r\n  const styleText = () => {\r\n    switch (font) {\r\n      case \"small\":\r\n        return \"11px\";\r\n      case \"normal\":\r\n        return \"15px\";\r\n      case \"large\":\r\n        return \"18px\";\r\n      default:\r\n        return \"12px\";\r\n    }\r\n  };\r\n  const styleContainer = darkmode ? { backgroundColor: \"black\" } : null;\r\n  const styleTitle = darkmode ? { color: \"white\" } : null;\r\n\r\n  return (\r\n    <div className=\"removed-container\" style={styleContainer}>\r\n      <div className=\"removed-container__box\">\r\n        <p className=\"removed-container__title\" style={styleTitle}>\r\n          Completed tasks\r\n        </p>\r\n        <ul className=\"list\">{renderNotes(done)}</ul>\r\n      </div>\r\n      <div className=\"removed-container__box\">\r\n        <p className=\"removed-container__title\" style={styleTitle}>\r\n          Removed tasks\r\n        </p>\r\n        <ul className=\"list\">{renderNotes(removed)}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    removed: state.removedNotes,\r\n    done: state.doneNotes,\r\n    darkmode: state.settingsList.darkmode,\r\n    font: state.settingsList.fontSize,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(RemovedNotes);\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport { hideSettings, switchDarkMode, switchFontSize } from \"../actions\";\r\nimport { handleVisibility, renderFormInput, closeForm } from \"../helpers\";\r\nimport { darkModeBg } from \"../helpers/consts\";\r\n\r\nimport \"../css/settings.css\";\r\n\r\nconst Settings = ({\r\n  isVisible,\r\n  darkmode,\r\n  handleSubmit,\r\n  switchDarkMode,\r\n  switchFontSize,\r\n  hideSettings,\r\n}) => {\r\n  const formContainer = useRef();\r\n  const setVisibility = () => {\r\n    return handleVisibility(isVisible);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    switchDarkMode(values.darkMode);\r\n    switchFontSize(values.fontSize);\r\n    hideSettings();\r\n  };\r\n\r\n  const style = darkmode ? { backgroundColor: darkModeBg } : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"settings\"\r\n      style={setVisibility()}\r\n      onClick={(e) => closeForm(e, formContainer, hideSettings)}\r\n    >\r\n      <div\r\n        className=\"settings__options-container\"\r\n        style={style}\r\n        ref={formContainer}\r\n      >\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"settings__box\">\r\n            <p className=\"settings__title\">Turn off / on the lights</p>\r\n            <Field\r\n              name=\"darkMode\"\r\n              component={renderFormInput}\r\n              type=\"checkbox\"\r\n              label=\"DarkMode\"\r\n              className=\"settings\"\r\n            />\r\n          </div>\r\n          <div className=\"settings__box\">\r\n            <p className=\"settings__title\">Select font size</p>\r\n            <Field\r\n              name=\"fontSize\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              value=\"small\"\r\n              label=\"small\"\r\n              className=\"settings\"\r\n            />\r\n            <Field\r\n              name=\"fontSize\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              value=\"normal\"\r\n              label=\"normal\"\r\n              className=\"settings\"\r\n            />\r\n            <Field\r\n              name=\"fontSize\"\r\n              component={renderFormInput}\r\n              type=\"radio\"\r\n              value=\"large\"\r\n              label=\"large\"\r\n              className=\"settings\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"settings__box\">\r\n            <button type=\"submit\" className=\"button\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.settings,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nconst WrappedSettings = reduxForm({\r\n  form: \"settings\",\r\n  enableReinitialize: true,\r\n})(Settings);\r\n\r\nexport default connect(mapStateToProps, {\r\n  hideSettings,\r\n  switchDarkMode,\r\n  switchFontSize,\r\n})(WrappedSettings);\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { darkModeBgMenu } from \"../helpers/consts\";\r\n\r\nimport \"../css/topbar.css\";\r\n\r\nconst TopBar = ({ darkmode }) => {\r\n  const [currentTime, setCurrentTime] = useState(null);\r\n\r\n  const style = darkmode ? { backgroundColor: darkModeBgMenu } : null;\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const date = new Date();\r\n\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const seconds = date.getSeconds();\r\n\r\n      setCurrentTime(\r\n        `${hours < 10 ? \"0\" + hours : hours}:${\r\n          minutes < 10 ? \"0\" + minutes : minutes\r\n        }:${seconds < 10 ? \"0\" + seconds : seconds}`\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"top-bar\" style={style}>\r\n      <div className=\"top-bar__date\">{new Date().toLocaleDateString()}</div>\r\n      <div className=\"top-bar__hour\">{currentTime}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TopBar);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n\r\nimport Menu from \"./Menu\";\r\nimport NoteEdit from \"./NoteEdit\";\r\nimport NotesContainer from \"./NotesContainer\";\r\nimport NoteCreate from \"./NoteCreate\";\r\nimport RemovedNotes from \"./RemovedNotes\";\r\nimport Settings from \"./Settings\";\r\nimport TopBar from \"./TopBar\";\r\n\r\nimport \"../css/base.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <TopBar />\r\n      <Switch>\r\n        <Route path=\"/deleted\" component={RemovedNotes} />\r\n        <Route path=\"/\" component={NotesContainer} />\r\n      </Switch>\r\n      <NoteCreate component={NoteCreate} />\r\n      <Settings component={Settings} />\r\n      <NoteEdit component={NoteEdit} />\r\n      <Menu />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { MOVE_TO_DONE } from \"../actions\";\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case MOVE_TO_DONE:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_EDIT, HIDE_EDIT } from \"../actions\";\r\n\r\nconst INITIAL_STATE = { visibility: \"HIDE\" };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SHOW_EDIT:\r\n      return {\r\n        visibility: \"SHOW\",\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        desc: action.payload.desc,\r\n      };\r\n\r\n    case HIDE_EDIT:\r\n      return { visibility: \"HIDE\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE, DELETE, EDIT } from \"../actions\";\r\n\r\nconst setInitialValue = () => {\r\n  const initalValue = [];\r\n  const keys = Object.keys(localStorage);\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    initalValue.push(JSON.parse(localStorage[keys[i]]));\r\n  }\r\n\r\n  return initalValue;\r\n};\r\n\r\nconst INITIAL_STATE = localStorage.length > 0 ? setInitialValue() : [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CREATE:\r\n      localStorage.setItem(action.payload.id, JSON.stringify(action.payload));\r\n\r\n      return [...state, action.payload];\r\n\r\n    case DELETE:\r\n      localStorage.removeItem(action.payload);\r\n      return [...state].filter((el) => el.id !== parseInt(action.payload, 10));\r\n\r\n    case EDIT:\r\n      const note = [...state].filter(\r\n        (el) => el.id === parseInt(action.payload.id)\r\n      );\r\n\r\n      note[0].title = action.payload.title;\r\n      note[0].desc = action.payload.desc;\r\n\r\n      return [...state];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { INCREMENT } from \"../actions\";\r\n\r\nconst getInitialValue = () => {\r\n  const keys = Object.keys(localStorage);\r\n\r\n  const convertedKeys = keys.map((key) => parseInt(key));\r\n\r\n  return Math.max(...convertedKeys);\r\n};\r\n\r\nconst INITIAL_STATE = localStorage.length > 0 ? getInitialValue() + 1 : 0;\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { MOVE_TO_REMOVED } from \"../actions\";\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case MOVE_TO_REMOVED:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SWITCH_MODE, SWITCH_SIZE } from \"../actions\";\r\n\r\nconst INITIAL_STATE = { darkmode: false, fontSize: \"normal\" };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_MODE:\r\n      return { ...state, darkmode: action.payload };\r\n\r\n    case SWITCH_SIZE:\r\n      return { ...state, fontSize: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as FormReducer } from \"redux-form\";\r\n\r\nimport createNoteVisibilityReducer from \"./createNoteVisibilityReducer\";\r\nimport doneNotesReducer from \"./doneNotesReducer\";\r\nimport editNoteVisibilityReducer from \"./editNoteVisibilityReducer\";\r\nimport notesReducer from \"./notesReducer\";\r\nimport noteIdReducer from \"./noteIdReducer\";\r\nimport removedNotesReducer from \"./removedNotesReducer\";\r\nimport settingsReducer from \"./settingsReducer\";\r\nimport settingsVisibility from \"./settingsVisibilityReducer\";\r\n\r\nexport default combineReducers({\r\n  editList: editNoteVisibilityReducer,\r\n  doneNotes: doneNotesReducer,\r\n  id: noteIdReducer,\r\n  notesList: notesReducer,\r\n  notesMenu: createNoteVisibilityReducer,\r\n  removedNotes: removedNotesReducer,\r\n  settingsList: settingsReducer,\r\n  settings: settingsVisibility,\r\n\r\n  form: FormReducer,\r\n});\r\n","import { SHOW_NOTES, HIDE_NOTES } from \"../actions\";\r\n\r\nconst INITIAL_STATE = \"HIDE\";\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SHOW_NOTES:\r\n      return \"SHOW\";\r\n    case HIDE_NOTES:\r\n      return \"HIDE\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_SETTINGS, HIDE_SETTINGS } from \"../actions\";\r\n\r\nconst INITIAL_STATE = \"HIDE\";\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SHOW_SETTINGS:\r\n      return \"SHOW\";\r\n    case HIDE_SETTINGS:\r\n      return \"HIDE\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}