{"version":3,"sources":["components/TopBar.js","actions/index.js","components/Menu.js","components/Note.js","components/NotesContainer.js","components/RemovedNotes.js","components/NoteCreate.js","components/Settings.js","components/App.js","reducers/notesReducer.js","reducers/settingsReducer.js","reducers/removedNotesReducer.js","reducers/doneNotesReducer.js","reducers/index.js","reducers/createNoteVisibilityReducer.js","reducers/settingsVisibilityReducer.js","reducers/noteIdReducer.js","index.js"],"names":["connect","state","darkmode","settingsList","useState","currentTime","setCurrentTime","style","backgroundColor","useEffect","setInterval","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","className","toLocaleDateString","hideCreateNote","type","hideSettings","createNoteVisiblity","notesMenu","settingsVisibility","settings","showCreateNote","showSettings","iconStyle","transform","hideWindows","to","onClick","exact","icon","faHome","faCogs","faPlus","faTrashAlt","fontSize","deleteNote","index","payload","moveToDone","values","title","desc","moveToRemoved","props","noteRef","useRef","displayFont","color","handleNoteDelete","current","dataset","key","description","data-key","id","ref","faCheck","faTimes","notesList","containerStyle","map","note","removed","removedNotes","done","doneNotes","renderNotes","list","styleContainer","styleTitle","NoteCreate","handleVisibility","isVisible","handleSubmit","incrementId","reset","createNote","params","renderFormTextarea","field","label","input","meta","touched","error","renderFormInput","autoComplete","this","onSubmit","Field","name","component","value","Component","WrappedNoteCreate","reduxForm","form","validate","errors","toLocaleString","Settings","renderFormField","switchDarkMode","darkMode","switchFontSize","WrappedSettings","enableReinitialize","size","App","path","RemovedNotes","NotesContainer","INITIAL_STATE","combineReducers","action","filter","el","FormReducer","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856db9a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../css/topbar.css\";\r\n\r\nconst TopBar = ({ darkmode }) => {\r\n  const [currentTime, setCurrentTime] = useState(null);\r\n\r\n  const style = darkmode ? { backgroundColor: \"lightgray\" } : null;\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const date = new Date();\r\n\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const seconds = date.getSeconds();\r\n\r\n      setCurrentTime(\r\n        `${hours < 10 ? \"0\" + hours : hours}:${\r\n          minutes < 10 ? \"0\" + minutes : minutes\r\n        }:${seconds < 10 ? \"0\" + seconds : seconds}`\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"top-bar\" style={style}>\r\n      <div className=\"top-bar__date\">{new Date().toLocaleDateString()}</div>\r\n      <div className=\"top-bar__hour\">{currentTime}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TopBar);\r\n","export const showCreateNote = () => {\r\n  return {\r\n    type: \"SHOW-NOTES\",\r\n  };\r\n};\r\n\r\nexport const hideCreateNote = () => {\r\n  return {\r\n    type: \"HIDE-NOTES\",\r\n  };\r\n};\r\n\r\nexport const showSettings = () => {\r\n  return {\r\n    type: \"SHOW-SETTINGS\",\r\n  };\r\n};\r\n\r\nexport const hideSettings = () => {\r\n  return {\r\n    type: \"HIDE-SETTINGS\",\r\n  };\r\n};\r\n\r\nexport const switchDarkMode = (value) => {\r\n  return {\r\n    type: \"SWITCH_MODE\",\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const switchFontSize = (size) => {\r\n  return {\r\n    type: \"SWITCH_SIZE\",\r\n    payload: size,\r\n  };\r\n};\r\n\r\nexport const createNote = (values) => {\r\n  return {\r\n    type: \"CREATE\",\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.description,\r\n      color: values.color,\r\n      id: values.id,\r\n      date: new Date().toLocaleString(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteNote = (index) => {\r\n  return {\r\n    type: \"DELETE\",\r\n    payload: index,\r\n  };\r\n};\r\n\r\nexport const incrementId = () => {\r\n  return {\r\n    type: \"INCREMENT\",\r\n  };\r\n};\r\n\r\nexport const moveToRemoved = (values) => {\r\n  return {\r\n    type: \"MOVE_TO_REMOVED\",\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.desc,\r\n    },\r\n  };\r\n};\r\n\r\nexport const moveToDone = (values) => {\r\n  return {\r\n    type: \"MOVE_TO_DONE\",\r\n    payload: {\r\n      title: values.title,\r\n      desc: values.desc,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n} from \"../actions\";\r\n\r\nimport \"../css/menu.css\";\r\n\r\nconst Menu = ({\r\n  createNoteVisiblity,\r\n  settingsVisibility,\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n  darkmode,\r\n}) => {\r\n  const iconStyle =\r\n    createNoteVisiblity === \"SHOW\" ? { transform: \"rotate(45deg)\" } : null;\r\n\r\n  const handleCreateNoteVisiblity = () => {\r\n    if (createNoteVisiblity === \"HIDE\") {\r\n      showCreateNote();\r\n      hideSettings();\r\n    } else {\r\n      hideCreateNote();\r\n    }\r\n  };\r\n\r\n  const handleSettingsVisiblity = () => {\r\n    if (settingsVisibility === \"HIDE\") {\r\n      showSettings();\r\n      hideCreateNote();\r\n    } else {\r\n      hideSettings();\r\n    }\r\n  };\r\n\r\n  const hideWindows = () => {\r\n    hideSettings();\r\n    hideCreateNote();\r\n  };\r\n\r\n  const style = darkmode ? { backgroundColor: \"lightgray\" } : null;\r\n\r\n  return (\r\n    <div className=\"menu\" style={style}>\r\n      <div className=\"menu__button menu__button--left\">\r\n        <NavLink to=\"/\" className=\"menu__link\" onClick={hideWindows} exact>\r\n          <FontAwesomeIcon icon={faHome} />\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"menu__button\">\r\n        <NavLink\r\n          to=\"/settings\"\r\n          className=\"menu__link\"\r\n          onClick={handleSettingsVisiblity}\r\n        >\r\n          <FontAwesomeIcon icon={faCogs} />\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"menu__button menu__button--center\" style={style}>\r\n        <NavLink\r\n          to=\"/CreateNote\"\r\n          className=\"menu__link\"\r\n          onClick={handleCreateNoteVisiblity}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faPlus}\r\n            style={iconStyle}\r\n            className=\"menu__icon\"\r\n          />\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"menu__button\">\r\n        <NavLink to=\"/deleted\" className=\"menu__link\" onClick={hideWindows}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    createNoteVisiblity: state.notesMenu,\r\n    settingsVisibility: state.settings,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  showCreateNote,\r\n  hideCreateNote,\r\n  showSettings,\r\n  hideSettings,\r\n})(Menu);\r\n","import React, { useRef } from \"react\";\r\nimport { deleteNote, moveToDone, moveToRemoved } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../css/note.css\";\r\n\r\nconst Note = (props) => {\r\n  const noteRef = useRef();\r\n\r\n  const displayFont = () => {\r\n    switch (props.fontSize) {\r\n      case \"small\":\r\n        return \"9px\";\r\n\r\n      case \"normal\":\r\n        return \"15px\";\r\n\r\n      case \"large\":\r\n        return \"22px\";\r\n      default:\r\n        return \"15px\";\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    backgroundColor: props.color,\r\n    color: props.color === \"rgb(209, 63, 63)\" ? \"white\" : \"black\",\r\n    fontSize: displayFont(),\r\n  };\r\n\r\n  const handleNoteDelete = (type) => {\r\n    props.deleteNote(noteRef.current.dataset.key);\r\n    const values = { title: props.title, desc: props.description };\r\n\r\n    if (type === \"DONE\") {\r\n      props.moveToDone(values);\r\n    } else {\r\n      props.moveToRemoved(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note\" data-key={props.id} ref={noteRef} style={style}>\r\n      <div className=\"note__top-bar\">\r\n        <div className=\"note__date\">{`Created: ${props.date}`}</div>\r\n\r\n        <div className=\"note__done\">\r\n          <FontAwesomeIcon\r\n            icon={faCheck}\r\n            className=\"note__icon\"\r\n            onClick={() => handleNoteDelete(\"DONE\")}\r\n          />\r\n        </div>\r\n        <div className=\"note__delete\">\r\n          <FontAwesomeIcon\r\n            icon={faTimes}\r\n            className=\"note__icon\"\r\n            onClick={() => handleNoteDelete(\"REMOVED\")}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"note__body\">\r\n        <div className=\"note__title\" style={{ fontSize: displayFont() }}>\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <div className=\"note__text\">\r\n          <p>{props.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fontSize: state.settingsList.fontSize,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteNote,\r\n  moveToDone,\r\n  moveToRemoved,\r\n})(Note);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Note from \"./Note\";\r\n\r\nimport \"../css/notescontainer.css\";\r\n\r\nconst NotesContainer = ({ notesList, darkmode }) => {\r\n  const containerStyle = darkmode ? { backgroundColor: \"black\" } : null;\r\n\r\n  const renderNotes = () =>\r\n    notesList.map((note) => (\r\n      <Note\r\n        title={note.title}\r\n        description={note.desc}\r\n        id={note.id}\r\n        color={note.color}\r\n        date={note.date}\r\n        key={note.id}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"notes-container\" style={containerStyle}>\r\n      {renderNotes()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notesList: state.notesList,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(NotesContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../css/removednotes.css\";\r\n\r\nconst RemovedNotes = ({ removed, done, darkmode }) => {\r\n  const renderNotes = (list) =>\r\n    list.map((note) => (\r\n      <li className=\"list__item\" key={note.title}>\r\n        <h4 className=\"list__title\">{note.title}</h4>\r\n        <p>{note.desc}</p>\r\n      </li>\r\n    ));\r\n\r\n  const styleContainer = darkmode ? { backgroundColor: \"black\" } : null;\r\n  const styleTitle = darkmode ? { color: \"white\" } : null;\r\n\r\n  return (\r\n    <div className=\"removed-container\" style={styleContainer}>\r\n      <div className=\"removed-container__box\">\r\n        <p className=\"removed-container__title\" style={styleTitle}>\r\n          Completed tasks\r\n        </p>\r\n        <ul className=\"list\">{renderNotes(done)}</ul>\r\n      </div>\r\n      <div className=\"removed-container__box\">\r\n        <p className=\"removed-container__title\" style={styleTitle}>\r\n          Removed tasks\r\n        </p>\r\n        <ul className=\"list\">{renderNotes(removed)}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    removed: state.removedNotes,\r\n    done: state.doneNotes,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(RemovedNotes);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNote, hideCreateNote, incrementId } from \"../actions\";\r\n\r\nimport \"../css/notecreate.css\";\r\n\r\nclass NoteCreate extends Component {\r\n  handleVisibility = () => {\r\n    if (this.props.isVisible === \"HIDE\") {\r\n      return { transform: \"translateY(100vh)\" };\r\n    } else {\r\n      return { transform: \"translateY(0)\" };\r\n    }\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n    const { incrementId, reset, createNote, hideCreateNote, id } = this.props;\r\n\r\n    const params = { ...values, id: id };\r\n    incrementId();\r\n\r\n    createNote(params);\r\n    reset();\r\n    hideCreateNote();\r\n  };\r\n\r\n  renderFormTextarea = (field) => {\r\n    return (\r\n      <>\r\n        <label className=\"note-create__form-label\">\r\n          {field.label}\r\n          <textarea\r\n            {...field.input}\r\n            className=\"note-create__form-input note-create__form-input--large\"\r\n          />\r\n        </label>\r\n        {field.meta.touched ? (\r\n          <p className=\"note-create__error\">{field.meta.error}</p>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  renderFormInput = (field) => {\r\n    return (\r\n      <>\r\n        <label className=\"note-create__form-label\">\r\n          {field.label}\r\n          <input\r\n            type={field.type}\r\n            {...field.input}\r\n            className=\"note-create__form-input\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n        {field.meta.touched ? (\r\n          <p className=\"note-create__error\">{field.meta.error}</p>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const style = this.props.darkmode ? { backgroundColor: \"gray\" } : null;\r\n\r\n    return (\r\n      <div className=\"note-create\" style={this.handleVisibility()}>\r\n        <div className=\"note-create__form-container\" style={style}>\r\n          <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n            <p className=\"note-create__title\">Select note color</p>\r\n            <div className=\"note-create__form-field note-create__form-field--flex\">\r\n              <Field\r\n                name=\"color\"\r\n                component={this.renderFormInput}\r\n                type=\"radio\"\r\n                label=\"Red\"\r\n                value=\"rgb(209, 63, 63)\"\r\n              />\r\n              <Field\r\n                name=\"color\"\r\n                component={this.renderFormInput}\r\n                type=\"radio\"\r\n                label=\"Green\"\r\n                value=\"rgb(99, 170, 84)\"\r\n              />\r\n              <Field\r\n                name=\"color\"\r\n                component={this.renderFormInput}\r\n                type=\"radio\"\r\n                label=\"Yellow\"\r\n                value=\"rgb(252, 219, 111)\"\r\n              />\r\n            </div>\r\n            <div className=\"note-create__form-field\">\r\n              <Field\r\n                name=\"title\"\r\n                component={this.renderFormInput}\r\n                type=\"text\"\r\n                label=\"Note title\"\r\n              />\r\n            </div>\r\n            <div className=\"note-create__form-field\">\r\n              <Field\r\n                name=\"description\"\r\n                component={this.renderFormTextarea}\r\n                label=\"Note description\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              Create note\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.notesMenu,\r\n    id: state.id,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.title) {\r\n    errors.title = \"Enter note title\";\r\n  }\r\n\r\n  if (!values.description) {\r\n    errors.description = \"Enter note description\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst WrappedNoteCreate = reduxForm({\r\n  form: \"noteCreate\",\r\n  validate,\r\n})(NoteCreate);\r\n\r\nexport default connect(mapStateToProps, {\r\n  createNote,\r\n  hideCreateNote,\r\n  incrementId,\r\n})(WrappedNoteCreate);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideSettings, switchDarkMode, switchFontSize } from \"../actions\";\r\n\r\nimport \"../css/settings.css\";\r\n\r\nclass Settings extends Component {\r\n  handleVisibility = () => {\r\n    if (this.props.isVisible === \"HIDE\") {\r\n      return { transform: \"translateY(100vh)\" };\r\n    } else {\r\n      return { transform: \"translateY(0)\" };\r\n    }\r\n  };\r\n\r\n  renderFormField = (field) => {\r\n    return (\r\n      <label className=\"settings__label\">\r\n        {field.label}\r\n        <input {...field.input} type={field.type} className=\"settings__input\" />\r\n      </label>\r\n    );\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n    // localStorage.setItem(\"darkmode\", `${values.darkMode}`);\r\n    // localStorage.setItem(\"fontsize\", `${values.fontSize}`);\r\n    this.props.switchDarkMode(values.darkMode);\r\n    this.props.switchFontSize(values.fontSize);\r\n    this.props.hideSettings();\r\n  };\r\n\r\n  render() {\r\n    const style = this.props.darkmode ? { backgroundColor: \"gray\" } : null;\r\n\r\n    return (\r\n      <div className=\"settings\" style={this.handleVisibility()}>\r\n        <div className=\"settings__options-container\" style={style}>\r\n          <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n            <div className=\"settings__box\">\r\n              <p className=\"settings__title\">Turn off / on the lights</p>\r\n              <Field\r\n                name=\"darkMode\"\r\n                component={this.renderFormField}\r\n                type=\"checkbox\"\r\n                label=\"DarkMode\"\r\n              />\r\n            </div>\r\n            <div className=\"settings__box\">\r\n              <p className=\"settings__title\">Select font size</p>\r\n              <Field\r\n                name=\"fontSize\"\r\n                component={this.renderFormField}\r\n                type=\"radio\"\r\n                value=\"small\"\r\n                label=\"small\"\r\n              />\r\n              <Field\r\n                name=\"fontSize\"\r\n                component={this.renderFormField}\r\n                type=\"radio\"\r\n                value=\"normal\"\r\n                label=\"normal\"\r\n              />\r\n              <Field\r\n                name=\"fontSize\"\r\n                component={this.renderFormField}\r\n                type=\"radio\"\r\n                value=\"large\"\r\n                label=\"large\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"settings__box\">\r\n              <button type=\"submit\" className=\"button\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.settings,\r\n    darkmode: state.settingsList.darkmode,\r\n  };\r\n};\r\n\r\nconst validate = () => {\r\n  const errors = {};\r\n  return errors;\r\n};\r\n\r\nconst WrappedSettings = reduxForm({\r\n  form: \"settings\",\r\n  enableReinitialize: true,\r\n  validate,\r\n})(Settings);\r\n\r\nexport default connect(mapStateToProps, {\r\n  hideSettings,\r\n  switchDarkMode,\r\n  switchFontSize,\r\n})(WrappedSettings);\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nimport TopBar from \"./TopBar\";\nimport Menu from \"./Menu\";\nimport NotesContainer from \"./NotesContainer\";\nimport RemovedNotes from \"./RemovedNotes\";\nimport NoteCreate from \"./NoteCreate\";\nimport Settings from \"./Settings\";\nimport \"../css/base.css\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <TopBar />\n      <Switch>\n        <Route path=\"/deleted\" component={RemovedNotes} />\n        <Route path=\"/\" component={NotesContainer} />\n      </Switch>\n      <NoteCreate component={NoteCreate} />\n      <Settings component={Settings} />\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE\":\r\n      return [...state, action.payload];\r\n\r\n    case \"DELETE\":\r\n      return [...state].filter((el) => el.id != action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = { darkmode: false, fontSize: \"normal\" };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SWITCH_MODE\":\r\n      return { ...state, darkmode: action.payload };\r\n\r\n    case \"SWITCH_SIZE\":\r\n      return { ...state, fontSize: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"MOVE_TO_REMOVED\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"MOVE_TO_DONE\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as FormReducer } from \"redux-form\";\r\n\r\nimport createNoteVisibilityReducer from \"./createNoteVisibilityReducer\";\r\nimport notesReducer from \"./notesReducer\";\r\nimport settingsReducer from \"./settingsReducer\";\r\nimport settingsVisibility from \"./settingsVisibilityReducer\";\r\nimport noteIdReducer from \"./noteIdReducer\";\r\nimport removedNotesReducer from \"./removedNotesReducer\";\r\nimport doneNotesReducer from \"./doneNotesReducer\";\r\n\r\nexport default combineReducers({\r\n  notesList: notesReducer,\r\n  settingsList: settingsReducer,\r\n  notesMenu: createNoteVisibilityReducer,\r\n  settings: settingsVisibility,\r\n  removedNotes: removedNotesReducer,\r\n  doneNotes: doneNotesReducer,\r\n  id: noteIdReducer,\r\n\r\n  form: FormReducer,\r\n});\r\n","const INITIAL_STATE = \"HIDE\";\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SHOW-NOTES\":\r\n      return \"SHOW\";\r\n    case \"HIDE-NOTES\":\r\n      return \"HIDE\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = \"HIDE\";\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SHOW-SETTINGS\":\r\n      return \"SHOW\";\r\n    case \"HIDE-SETTINGS\":\r\n      return \"HIDE\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INITIAL_STATE = 0;\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}